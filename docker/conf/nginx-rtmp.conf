load_module "modules/ngx_rtmp_module.so";

error_log /dev/stdout info;

events { worker_connections 1024; }

rtmp_auto_push on;

rtmp {
    server {
        listen 1935;
        #chunk_size 4000;
               
        # live with transcoding
        
        #application live {
        #    live on;
        #    exec ffmpeg -i rtmp://localhost:1935/$app/$name                            
        #      -acodec copy -c:v copy -f flv  rtmp://localhost:1935/hls/$name;            
        #      -acodec aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 50 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p
        #      -acodec aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 50 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p
        #      -acodec aac -b:a 128k -c:v libx264 -b:v 750k -f flv -g 50 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_360p
        #      -acodec aac -b:a 128k -c:v libx264 -b:v 400k -f flv -g 50 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p
        #}
        
        #application webrtc {
        #  live on;
        #  exec_push ffmpeg -i rtmp://localhost/webrtc/$name -b:v 1.5M -preset zerolatency -c:v libvpx -deadline realtime -f rtp -an rtp://stream.echovroom.live:10048 -acodec libopus -vn -f rtp://stream.echovroom.live:10049 2>>/var/log/ffmpeg-$name.log;
        #}
        
        #application hls {
        #    live on;
        #    hls on;
        #    hls_fragment_naming system;
        #    hls_fragment 5;
        #    hls_playlist_length 10;
        #    hls_path /data/hls;
        #    hls_nested on;
        #
        #    hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;
        #    hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
        #    hls_variant _360p BANDWIDTH=878000,RESOLUTION=640x360;
        #    hls_variant _240p BANDWIDTH=528000,RESOLUTION=426x240;
        #}
    }
}
    
http {
    sendfile off;
    tcp_nopush on;
    default_type application/octet-stream;

    server {
        listen 80;
                
        include /etc/nginx/mime.types;
        
        location / {
          root /var/www/html;
          index  index.html index.htm;            
        } 
        
        location /hls {
       
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
                    
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
                text/html html;
            }
            root /data/;
        }

        location /live {
          alias /data/hls;
          types {
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
              application/dash+xml mpd;
              text/html html;
          }
          add_header Cache-Control no-cache;
          add_header Access-Control-Allow-Origin *;
        }

       

             

    }
}
