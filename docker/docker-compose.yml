version: "3.8"

networks:
  hostnet:
    external: true
    name: "host"

services:

  frontend:
    build:
      context:  ../
      dockerfile: Dockerfile.dev
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODESERVER=api
    volumes:
      - ../:/usr/src/app
    ports:
      - 8080:8080

  eventhandler:
    build:
      context:  ../eventhandler
      dockerfile: Dockerfile.dev
    volumes:
      - ../eventhandler/:/usr/src/app
    ports:
      - 3000:3000
    #environment:
    #  MONGO_DB_HOST: mongodb
    command:
      npm run startdev

  janus:
    image: backface/janus
    volumes:
     - "/opt/certs:/opt/certs:ro"
     - "./conf/janus/janus.eventhandler.sampleevh.jcfg:/opt/janus/etc/janus/janus.eventhandler.sampleevh.jcfg"
     - "./conf/janus/janus.plugin.streaming.jcfg:/opt/janus/etc/janus//janus.plugin.streaming.jcfg"
    network_mode: host
    command:
      /opt/janus/bin/janus --event-handlers
    #networks:
  #    - default


  coturn:
    image: instrumentisto/coturn
    volumes:
      - /opt/certs:/opt/certs:ro
    network_mode: host
    command:
        - -n
        - --verbose
        - --lt-cred-mech
        - --fingerprint
        - --no-multicast-peers --no-cli \
        - --no-tlsv1
        - --no-tlsv1_1
        - --user=${TURN_USER}:${TURN_PASSWORD}
        - --realm=${FULLHOSTNAME}
        - --cert=/opt/certs/fullchain.pem
        - --pkey=/opt/certs/privkey.pem
        - --external-ip=${EXTERNAL_IP}

  rtmp:
    image: backface/nginx-rtmp
    ports:
      - 1935:1935
    volumes:
      - /opt/certs:/opt/certs:ro
      - ./conf/nginx-rtmp.conf:/etc/nginx/nginx.conf:ro

  rtsp:
    image: aler9/rtsp-simple-server
    volumes:
      - ./conf/rtsp-simple-server.yml:/rtsp-simple-server.yml:ro
    network_mode: host
